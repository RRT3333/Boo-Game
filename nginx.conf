events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # 서버 정보 숨기기
    server_tokens off;

    # 로그 설정
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;

    # 기본 설정
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 20M;

    # Gzip 압축
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # 업스트림 설정 - Unix 소켓 사용
    upstream django {
        server unix:/tmp/gunicorn.sock fail_timeout=0;
    }

    # 1. HTTP 요청을 HTTPS로 리디렉션
    server {
        listen 80;
        server_name boogame.kr www.boogame.kr;

        # Let's Encrypt 인증서 갱신을 위한 경로
        location /.well-known/acme-challenge/ {
            root /var/www/html;
        }

        # 파비콘 직접 서빙 (HTTPS 리디렉션 전에)
        location = /favicon.ico {
            alias /var/www/staticfiles/images/favicon/favicon.ico;
            access_log off;
            log_not_found off;
            expires 30d;
            add_header Cache-Control "public, no-transform";
        }

        # 나머지 모든 요청을 HTTPS로 리디렉션
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # 2. HTTPS 설정
    server {
        listen 443 ssl http2;
        server_name boogame.kr www.boogame.kr;

        # SSL 인증서 설정
        ssl_certificate /etc/letsencrypt/live/boogame.kr/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/boogame.kr/privkey.pem;

        # SSL 설정 강화
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_timeout 10m;
        ssl_session_cache shared:SSL:10m;
        ssl_session_tickets off;

        # HSTS (HTTP Strict Transport Security)
        add_header Strict-Transport-Security "max-age=63072000" always;

        # 보안 헤더 추가
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self' https: data: 'unsafe-inline' 'unsafe-eval';" always;

        # 정적 파일 서빙
        location /static/ {
            alias /var/www/staticfiles/;
            expires 30d;
            add_header Cache-Control "public, immutable";
            
            # 정적 파일 압축
            location ~* \.(js|css)$ {
                gzip_static on;
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
        }

        # 파비콘
        location = /favicon.ico {
            alias /var/www/staticfiles/images/favicon/favicon.ico;
            access_log off;
            log_not_found off;
            expires 30d;
            add_header Cache-Control "public, no-transform";
        }

        # robots.txt
        location = /robots.txt {
            alias /var/www/staticfiles/robots.txt;
            access_log off;
            log_not_found off;
        }

        # Django 애플리케이션으로 프록시
        location / {
            proxy_pass http://django;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
            
            # 프록시 타임아웃 설정
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # 버퍼링 설정
            proxy_buffering on;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
        }
    }
} 