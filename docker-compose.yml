version: '3.8'

services:
  web:
    build: .
    container_name: boo_game_web
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - DJANGO_SETTINGS_MODULE=boo_game.settings
    volumes:
      - staticfiles:/var/www/staticfiles
      - gunicorn_socket:/tmp
    networks:
      - boo_game_network
    depends_on:
      db:
        condition: service_healthy
      web:
        condition: service_healthy
    security_opt:
      - no-new-privileges:true
    mem_limit: 512M
    healthcheck:
      test: ["CMD-SHELL", "test -S /tmp/gunicorn.sock"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: postgres:15-alpine
    container_name: boo_game_db
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - boo_game_network
    expose:
      - "5432"
    security_opt:
      - no-new-privileges:true
    mem_limit: 512M
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  nginx:
    image: nginx:alpine
    container_name: boo_game_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - staticfiles:/var/www/staticfiles:ro
      - gunicorn_socket:/tmp:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro  # Let's Encrypt 인증서
      - /var/www/html:/var/www/html:ro        # Let's Encrypt 웹루트
    networks:
      - boo_game_network
    security_opt:
      - no-new-privileges:true
    mem_limit: 256M
    depends_on:
      web:
        condition: service_healthy

volumes:
  staticfiles:
  gunicorn_socket:
  postgres_data:

networks:
  boo_game_network:
    driver: bridge 